{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","removeFromSelected","setState","toggleSelected","selectedName","this","className","cn","type","onClick","map","good","isActive","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,mBAAqB,WACnB,EAAKC,SAAS,CACZF,aAAc,MAPpB,EAWEG,eAAiB,SAACC,GAGZA,IAFqB,EAAKL,MAAtBC,aAGN,EAAKC,qBAEL,EAAKC,SAAS,CACZF,aAAcI,KAlBtB,4CAuBE,WAAU,IAAD,OACCJ,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACE,oBAAIA,UAAWC,IACb,QACA,CACE,UAAWP,EACX,wBAAyBA,IAJ7B,SAQIA,EAGE,+CACMA,EADN,gBAEE,wBACE,aAAW,cACX,UAAQ,cACRQ,KAAK,SACLF,UAAU,cACVG,QAASJ,KAAKJ,wBATlB,sBAeN,uBAAOK,UAAU,QAAjB,SACE,gCACGT,EAAMa,KAAI,SAACC,GACV,IAAMC,EAAWD,IAASX,EAE1B,OACE,qBACE,UAAQ,OAERM,UAAWC,IACT,CACE,+BAAgCK,IALtC,UASE,6BACE,wBACE,UACEA,EAAW,eAAiB,YAE9BJ,KAAK,SACLF,UAAWC,IACT,SACA,CACE,UAAWK,IAGfH,QAAS,WACP,EAAKN,eAAeQ,IAZxB,SAeGC,EAAW,IAAM,QAItB,oBAAI,UAAQ,YAAYN,UAAU,eAAlC,SACGK,MA5BEA,iBA5DvB,GAAyBE,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5af01a9d.chunk.js","sourcesContent":["import { Component } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  removeFromSelected = () => {\n    this.setState({\n      selectedGood: '',\n    });\n  };\n\n  toggleSelected = (selectedName: string) => {\n    const { selectedGood } = this.state;\n\n    if (selectedName === selectedGood) {\n      this.removeFromSelected();\n    } else {\n      this.setState({\n        selectedGood: selectedName,\n      });\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className={cn(\n          'title',\n          {\n            'is-flex': selectedGood,\n            'is-align-items-center': selectedGood,\n          },\n        )}\n        >\n          {!selectedGood\n            ? 'No goods selected'\n            : (\n              <>\n                {`${selectedGood} is selected`}\n                <button\n                  aria-label=\"Select good\"\n                  data-cy=\"ClearButton\"\n                  type=\"button\"\n                  className=\"delete ml-3\"\n                  onClick={this.removeFromSelected}\n                />\n              </>\n            )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => {\n              const isActive = good === selectedGood;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={cn(\n                    {\n                      'has-background-success-light': isActive,\n                    },\n                  )}\n                >\n                  <td>\n                    <button\n                      data-cy={\n                        isActive ? 'RemoveButton' : 'AddButton'\n                      }\n                      type=\"button\"\n                      className={cn(\n                        'button',\n                        {\n                          'is-info': isActive,\n                        },\n                      )}\n                      onClick={() => {\n                        this.toggleSelected(good);\n                      }}\n                    >\n                      {isActive ? '-' : '+'}\n                    </button>\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}